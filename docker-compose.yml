
services:
  # Frontend web service
  frontend-web:
    build:
      context: ./frontend
      dockerfile: Dockerfile.web
      args:
        - NODE_OPTIONS=--max_old_space_size=4096
    environment:
      - NODE_ENV=production
      - EXPO_NO_DOCTOR=1
      - EXPO_DEBUG=true
    ports:
      - "${FRONTEND_PORT:-4080}:80"
    restart: always
    depends_on:
      - backend

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT:-4081}:3000"
    restart: always
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=postgres://${POSTGRES_USER:-nutrition_user}:${POSTGRES_PASSWORD:-your_secure_password_here}@db:5432/${POSTGRES_DB:-nutrition_tracker}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key_here}
      - USDA_API_KEY=${USDA_API_KEY:-}
      - PORT=3000
    depends_on:
      - db

  # Database service
  db:
    image: postgres:13-alpine
    ports:
      - "${DATABASE_PORT:-4082}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-nutrition_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-your_secure_password_here}
      - POSTGRES_DB=${POSTGRES_DB:-nutrition_tracker}
    restart: always

volumes:
  postgres_data:
