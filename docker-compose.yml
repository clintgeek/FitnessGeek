services:
  # Frontend web service
  frontend-web:
    build:
      context: ./frontend
      dockerfile: Dockerfile.web
      args:
        - NODE_OPTIONS=--max_old_space_size=4096
    environment:
      - NODE_ENV=development
      - EXPO_NO_DOCTOR=1
      - EXPO_DEBUG=true
      - REACT_APP_API_URL=http://backend:3000
    ports:
      - "${FRONTEND_PORT:-4080}:80"
    restart: always
    depends_on:
      - backend
    networks:
      - nutrition-network

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT:-4081}:3000"
    restart: always
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=postgres://nutrition_user:nutrition123@db:5432/nutrition_tracker
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key_here}
      - USDA_API_KEY=${USDA_API_KEY:-}
      - PORT=3000
      - TZ=America/Chicago
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nutrition-network

  # Redis service
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - ./redis/data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nutrition-network

  # Database service
  db:
    image: postgres:13-alpine
    ports:
      - "${DATABASE_PORT:-4082}:5432"
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=nutrition_user
      - POSTGRES_PASSWORD=nutrition123
      - POSTGRES_DB=nutrition_tracker
      - TZ=America/Chicago
      - PGTZ=America/Chicago
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nutrition_user -d nutrition_tracker"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nutrition-network

networks:
  nutrition-network:
    driver: bridge
